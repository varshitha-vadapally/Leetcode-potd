class Solution {
public:
    string longestDiverseString(int a, int b, int c) {
        priority_queue<pair<int,int>>pq;
        char arr[4]={'k','a','b','c'};
        if(a>0){pq.push({a,1});}
        if(b>0){pq.push({b,2});}
        if(c>0){pq.push({c,3});}
       
        
        string s="";
        auto top=pq.top();
        pq.pop();
        while(1){
            s+=arr[top.second];
            top.first--;
            if((top.first>=1 && pq.empty()) || top.first>=pq.top().first ){
                s+=arr[top.second];
               top.first--;
            }
            auto temp=top;
            if(!pq.empty()){
                top=pq.top();
                pq.pop();
            }else{
                break;
            }
            if(temp.first>0){
                pq.push(temp);
            }
        }
        return s;
    }
};